<?php

namespace MeteoBundle\Repository;

/**
 * meteoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MeteoRepository extends \Doctrine\ORM\EntityRepository
{
    public function findcountryid($id)
    {
        $time = new \DateTime();
        $time->modify('-1 hour');
        $qb = $this->createQueryBuilder('m');

        $qb->where('m.country = :country')
            ->andwhere('m.date > :time')
            ->setParameter('country', $id)
            ->setParameter('time', $time)
            ->orderBy('m.date', 'DESC')
            ->setMaxResults('1')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function findinput($ville)
    {
        $time = new \DateTime();
        $time->modify('-1 hour');
        $qb = $this->createQueryBuilder('m');

        $qb->where('m.input = :input')
            ->andwhere('m.date > :time')
            ->setParameter('input', $ville)
            ->setParameter('time', $time)
            ->orderBy('m.date', 'DESC')
            ->setMaxResults('1')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
    public function findgps($latitude_clean, $longitude_clean)
    {
        $time = new \DateTime();
        $time->modify('-1 hour');
        $minLatitude = $latitude_clean -0.01;
        $maxLatitude = $latitude_clean +0.01;
        $minLongitude = $longitude_clean -0.01;
        $maxLongitude = $longitude_clean +0.01;
        $qb = $this->createQueryBuilder('m');

        $qb->where('m.date > :time')
            ->andwhere('m.longitude > :min_longitude')
            ->andwhere('m.longitude < :max_longitude')
            ->andwhere('m.latitude > :min_latitude')
            ->andwhere('m.latitude < :max_latitude')
            ->setParameter('time', $time)
            ->setParameter('min_latitude', $minLatitude)
            ->setParameter('max_latitude', $maxLatitude)
            ->setParameter('min_longitude', $minLongitude)
            ->setParameter('max_longitude', $maxLongitude)
            ->orderBy('m.date', 'DESC')
            ->setMaxResults('1')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
